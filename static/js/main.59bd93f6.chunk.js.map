{"version":3,"sources":["assets/sunny.gif","assets/lightstorm.gif","GlobalStyle.js","components/SearchBar/SearchBar.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","GlobalStyle","createGlobalStyle","_templateObject","Hamburger","styled","button","SearchBar_templateObject","StyledAside","aside","_templateObject2","SearchBar","state","value","visible","handleChangeInput","e","_this","setState","target","handleMenu","document","querySelector","hamburger","classList","toggle","_this$state","this","react_default","a","createElement","Fragment","onClick","className","style","transition","onSubmit","props","weather","type","placeholder","name","onChange","Component","StyledMain","main","App_templateObject","StyledPicture","picture","App_templateObject2","sun","StyledDiv","div","_templateObject3","StyledP","_templateObject4","StyledDate","_templateObject5","App","temp","mintemp","maxtemp","sunrise","sunset","time","wind","pressure","date","err","appPicture","city","getWeather","elements","country","preventDefault","fetch","concat","then","response","ok","json","hours","Date","getHours","minutes","getMinutes","toLocaleDateString","Math","ceil","temp_min","temp_max","speed","_this2","data","catch","console","log","lightstorm","src_GlobalStyle","components_SearchBar_SearchBar","backgroundImage","backgroundColor","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.59bd93f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sunny.e9cfa71f.gif\";","module.exports = __webpack_public_path__ + \"static/media/lightstorm.3c9c9939.gif\";","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css?family=Rubik:300,400,700&display=swap&subset=latin-ext');\r\n@import url('https://fonts.googleapis.com/css?family=Crimson+Pro:400,700&display=swap&subset=latin-ext');\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family:'Rubik',sans-serif;\r\n  }\r\n  body{\r\n    height:100vh;\r\n    overflow:hidden;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"../SearchBar/hamburgers.min.css\";\r\n\r\nconst Hamburger = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  border: none;\r\n  position: fixed;\r\n  top: 3%;\r\n  left: 7%;\r\n  z-index: 100;\r\n  background-color: #fff;\r\n  &.hamburger {\r\n    padding: 0;\r\n  }\r\n  span {\r\n    span {\r\n      &.hamburger-inner,\r\n      &.hamburger-inner::after,\r\n      &.hamburger-inner::before {\r\n        background-color: #fff;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledAside = styled.aside`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: #000;\r\n  position: fixed;\r\n  opacity: 0;\r\n  top: 0;\r\n  left: 0;\r\n  &.active {\r\n    opacity: 1;\r\n    transform: scale(1.3);\r\n  }\r\n  form {\r\n    display: flex;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    input {\r\n      border: 2px solid #fff;\r\n      padding: 10px;\r\n      background-color: transparent;\r\n      text-align: center;\r\n      margin: 15px 0 0;\r\n      border-radius: 30px;\r\n      color: #fff;\r\n    }\r\n    button {\r\n      padding: 10px 15px;\r\n      background-color: transparent;\r\n      border: 2px solid #fff;\r\n      border-radius: 30px;\r\n      font-family: \"Crimson Pro\", sans-serif;\r\n      font-weight: 700;\r\n      text-transform: uppercase;\r\n      margin-top: 15px;\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    value: \"Polska\",\r\n    visible: false\r\n  };\r\n\r\n  handleChangeInput = e => {\r\n    this.setState({\r\n      value: e.target.value\r\n    });\r\n  };\r\n\r\n  handleMenu = () => {\r\n    const { visible } = this.state;\r\n    this.setState({\r\n      visible: !visible\r\n    });\r\n    const aside = document.querySelector(\"aside\");\r\n    const hamburger = document.querySelector(\".hamburger\");\r\n    aside.classList.toggle(\"active\");\r\n    hamburger.classList.toggle(\"is-active\");\r\n  };\r\n\r\n  render() {\r\n    const { value, visible } = this.state;\r\n    return (\r\n      <>\r\n        <Hamburger\r\n          onClick={this.handleMenu}\r\n          className=\"hamburger hamburger--squeeze\"\r\n        >\r\n          <span className=\"hamburger-box\">\r\n            <span className=\"hamburger-inner\" />\r\n          </span>\r\n        </Hamburger>\r\n        <StyledAside\r\n          className={visible ? \"active\" : \"\"}\r\n          style={{\r\n            transition: visible ? \"0.4s\" : \"0.4s\"\r\n          }}\r\n        >\r\n          <form onSubmit={this.props.weather}>\r\n            <input type=\"text\" placeholder=\"Wpisz miasto..\" name=\"city\" />\r\n            <input\r\n              type=\"text\"\r\n              name=\"country\"\r\n              placeholder=\"Wpisz kraj...\"\r\n              value={value}\r\n              onChange={this.handleChangeInput}\r\n            />\r\n            <button onClick={this.handleMenu}>Sprawdź pogodę!</button>\r\n          </form>\r\n        </StyledAside>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GlobalStyle from \"../src/GlobalStyle\";\r\nimport SearchBar from \"./components/SearchBar/SearchBar\";\r\nimport sun from \"../src/assets/sunny.gif\";\r\nimport lightstorm from \"../src/assets/lightstorm.gif\";\r\n\r\nconst APIddz =\r\n  \"http://api.openweathermap.org/data/2.5/weather?q=Dzierżoniów&APPID=fd0c7244de93ccf1ff991b24b2358a5a&units=metric\";\r\n\r\nconst StyledMain = styled.main`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst StyledPicture = styled.picture`\r\n  flex-basis: 40%;\r\n  background-image: url(${sun});\r\n  background-repeat: no-repeat;\r\n  background-position: center top;\r\n  background-size: 100%;\r\n  color: #fff;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  flex-basis: 60%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  h1 {\r\n    text-align: center;\r\n    font-weight: 300;\r\n  }\r\n  h2 {\r\n    font-size: 60px;\r\n    text-align: center;\r\n    padding: 25px 0;\r\n    font-weight: 400;\r\n  }\r\n  h3 {\r\n    font-size: 15px;\r\n    text-align: center;\r\n    padding: 5px 0;\r\n    font-weight: 400;\r\n  }\r\n  p {\r\n    position: absolute;\r\n    bottom: 3%;\r\n    left: 5%;\r\n  }\r\n  p:nth-of-type(2) {\r\n    right: 5%;\r\n    left: initial;\r\n  }\r\n`;\r\n\r\nconst StyledP = styled.p`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 20%;\r\n  font-family: \"Crimson Pro\", sans-serif;\r\n  font-weight: 700;\r\n  font-size: 25px;\r\n  width: 100%;\r\n  text-align: center;\r\n  color: #fff;\r\n  z-index: 50;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nconst StyledDate = styled.div`\r\n  background-color: #000;\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  p {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    temp: \"\",\r\n    mintemp: \"\",\r\n    maxtemp: \"\",\r\n    sunrise: \"\",\r\n    sunset: \"\",\r\n    time: \"\",\r\n    wind: \"\",\r\n    pressure: \"\",\r\n    date: \"\",\r\n    weather: \"\",\r\n    err: \"\",\r\n    appPicture: \"\",\r\n    city: \"\"\r\n  };\r\n  componentWillMount() {\r\n    fetch(APIddz)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let hours = new Date().getHours();\r\n        let minutes = new Date().getMinutes();\r\n        const date = new Date().toLocaleDateString();\r\n        this.setState({\r\n          err: false,\r\n          temp: Math.ceil(data.main.temp),\r\n          time: `${hours < 10 ? `0${hours}` : hours}:${\r\n            minutes < 10 ? `0${minutes}` : minutes\r\n          }`,\r\n          pressure: data.main.pressure,\r\n          mintemp: Math.ceil(data.main.temp_min),\r\n          maxtemp: Math.ceil(data.main.temp_max),\r\n          wind: data.wind.speed,\r\n          date: date,\r\n          weather: data.weather.main,\r\n          city: data.name\r\n        });\r\n      })\r\n\r\n      .catch(err => console.log(err));\r\n  }\r\n  componentDidMount() {\r\n    switch (this.state.weather) {\r\n      case \"Rain\":\r\n        this.setState({\r\n          appPicture: \"Rain. Stay at home..\"\r\n        });\r\n        break;\r\n      case \"Lightstorm\":\r\n        this.setState({\r\n          appPicture: `${lightstorm}`\r\n        });\r\n        break;\r\n      default:\r\n        this.setState({\r\n          appPicture: `${sun}`\r\n        });\r\n    }\r\n  }\r\n  getWeather = e => {\r\n    const city = e.target.elements.city.value;\r\n    const country = e.target.elements.country.value;\r\n    e.preventDefault();\r\n    fetch(\r\n      `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=fd0c7244de93ccf1ff991b24b2358a5a&units=metric`\r\n    )\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n      })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (city && country) {\r\n          let hours = new Date().getHours();\r\n          let minutes = new Date().getMinutes();\r\n          const date = new Date().toLocaleDateString();\r\n          this.setState({\r\n            temp: Math.ceil(response.main.temp),\r\n            time: `${hours < 10 ? `0${hours}` : hours}:${\r\n              minutes < 10 ? `0${minutes}` : minutes\r\n            }`,\r\n            pressure: response.main.pressure,\r\n            mintemp: Math.ceil(response.main.temp_min),\r\n            maxtemp: Math.ceil(response.main.temp_max),\r\n            wind: response.wind.speed,\r\n            date: date,\r\n            weather: response.weather.main,\r\n            city: response.name\r\n          });\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    const { appPicture, weather } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <GlobalStyle />\r\n        <SearchBar weather={this.getWeather} />\r\n        <StyledMain>\r\n          <StyledPicture\r\n            style={{\r\n              backgroundImage:\r\n                appPicture === \"Rain\" ? \"none\" : `url(${appPicture})`,\r\n              backgroundColor: appPicture === \"Rain\" ? \"#000\" : \"none\"\r\n            }}\r\n          />\r\n          <StyledP>{weather === \"Rain\" ? `${appPicture}` : \"\"}</StyledP>\r\n          <StyledDiv>\r\n            <h1>{this.state.city}</h1>\r\n            <h2>{this.state.temp}&deg;C</h2>\r\n            <h3>Dziś ciśnienie wynosi: {this.state.pressure}hPa</h3>\r\n            <h3>Minimalna temperatura: {this.state.mintemp}&deg;C</h3>\r\n            <h3>Maksymalna temperatura: {this.state.maxtemp}&deg;C</h3>\r\n            <h3>Wiatr: {this.state.wind} km/h</h3>\r\n            <StyledDate>\r\n              <p>Godzina {this.state.time}</p>\r\n              <p>{this.state.date}</p>\r\n            </StyledDate>\r\n          </StyledDiv>\r\n        </StyledMain>\r\n        {console.log(\r\n          \"Awesome weather gifs were created by: https://dribbble.com/OsborneBranding\"\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"../src/App\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}